doctype html
html
    head
        title= title
        link(href='/css/style.css', rel='stylesheet')
        link(rel='stylesheet', href='http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/themes/base/jquery-ui.css', type='text/css', media='all')
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js', type='text/javascript')
        script(src='/js/socket.io.js', type='text/javascript')
        script(src='/js/support.js', type='text/javascript')
        script(src='/js/underscore-min.js', type='text/javascript')
        script(src='http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js', type='text/javascript')
        script(type='text/javascript').

          Array.prototype.shuffle = function() {
            var i = this.length,
              j, temp;
            if (i === 0) return this;
            while (--i) {
              j = Math.floor(Math.random() * (i + 1));
              temp = this[i];
              this[i] = this[j];
              this[j] = temp;
            }
            return this;
          };
          console.log("here #{IP}");
          var socket = io.connect('#{IP}');
          var _list = [1,2,3,4];
          $(document).ready(function ($) {
            if (jQuery.ui) {
              console.log('found jq ui')
            } else {
              alert("no jquery ui")
            }
            $('div[data-side=2]').hide();
            $('div[data-side=3]').hide();
            $('div[data-side=3]').on('show',function (event){
              console.log('on show', event.target);
            });
            var stateObj = { startPage: "start" };
            history.replaceState(stateObj, "Start", "/");
          });
        
          function flipme(e) {
            $('div[data-side=2]').hide();
            $('div[data-side=3]').hide();
            $('div[data-side=1]').show();
            var for_id = $(e).data('for');
            var e = document.getElementById(for_id);
            cycleme(e);
          }

          function practiceme(e) {
            $('div[data-side=2]').hide();
            $('div[data-side=3]').hide();
            $('div[data-side=1]').show();
            var for_id = $(e).data('for');
            var e = document.getElementById(for_id);
            var col_obj = $(e).data('col');
            $(e).hide();
            var new_id = e.id.split('-').slice(0, -1).join('-') + '-side=1';
            var new_e = $(document.getElementById(new_id));
            new_e.hide();
            var new_id = e.id.split('-').slice(0, -1).join('-') + '-side=3';
            var new_e = $(document.getElementById(new_id));
            new_e.show();
          }

          function cycleme(e) {
            var col_obj = $(e).data('col');
            $(e).hide();
            var side = e.id.split('-').slice(-1)[0];
            side = side.split('=').slice(-1)[0];
            var new_side = parseInt(side) + 1;
            if (new_side > 2) {
              new_side = 1;
            }
            var new_id = e.id.split('-').slice(0, -1).join('-') + '-side=' + new_side;
            var new_e = $(document.getElementById(new_id));
            new_e.show();

            /*
            var new_side = parseInt($(e).data().side) + 1;
            if (new_side > 3) {
              new_side = 1;
            }
            console.log($('#' + e.id));
            */
          }
          function radioClick(e) {
            console.log(e.target);
            var for_label = $(e.target).data('for');
            var label = document.getElementById(for_label);
            var col_obj = $(e.target).data('col');
            console.log(col_obj);
            if (col_obj.l1_str == $(e.target).val()){
              console.log('correct');
              $(label).text($(label).text() + ' ✔');
              $(label).addClass('correct');
            }else {
              console.log('wrong');
              $(label).text($(label).text() + ' ✘');
              $(label).addClass('wrong');
            }
            e.stopPropagation();
          }
          function randomize(lst) {
            return lst.slice(0,3);
          }

    body
      p
        | Select a word stem (rows) and a category(columns).
      each message, message_key in groups
        | Group #{message_key}
        br
        table
          tr
          each rows,row_key in message
            tr
                each col in rows
                  td
                      div.miniCardLayout(id='card-' + col.lemcat + '-side=1', data-col=col,  data-side='1')
                        //div.topBar
                        label.foreign
                          | #{col.l2_str}
                        div.topBar
                          label.submitLink.info(onclick='flipme(this)', data-for='card-' + col.lemcat + '-side=1') flip
                          label.submitLink.info(onclick='practiceme(this)', data-for='card-' + col.lemcat + '-side=1') practice

                      div.miniCardLayout(id='card-' + col.lemcat + '-side=2', data-col=col,  data-side='2')
                        //div.topBar
                        label.english
                          | #{col.l1_str}
                        div.topBar
                          label.submitLink.info(onclick='flipme(this)', data-for='card-' + col.lemcat + '-side=2') flip
                          label.submitLink.info(onclick='practiceme(this)', data-for='card-' + col.lemcat + '-side=2') practice
                      div.miniCardLayout(id='card-' + col.lemcat + '-side=3', data-col=col, data-side='3')
                        label.foreign
                          | #{col.l2_str}
                        div.options
                          - var rand_question = col.questions[Math.floor(Math.random() * col.questions.length)];
                          - var list = rand_question.l1_confusers.sort(function(a, b){return 0.5 - Math.random()}).slice(0,3).concat([col.l1_str]).sort(function(a,b){return 0.5 - Math.random()})
                          each o in list                        
                            div.radioAndLabel
                              label.english
                                input(type='radio', name=col.lemcat+'group', data-for=col.lemcat +  o + 'label',  value=o, data-col=col, onclick='radioClick(event)')
                                |#{o}
                                label(id=col.lemcat +  o + 'label')
                        div.topBar
                          //- var q = _.sample(col.questions);
                          //- var options = _.shuffle(_.shuffle(q.l1_confusers,4) + [q.l1_str])
                          //console.log(options)
                          //each opt in options
      p
        form
          | Proceed to 
          button.submitLink(formaction='/quiz')
            | quiz

